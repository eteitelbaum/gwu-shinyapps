---
title: "WebApps 6502"
subtitle: "Session 1.1--Introduction to R Shiny"
footer: "[WebApps Website](https://rshiny-is.cool)"
logo: images/webapps-logo.png
format:
  revealjs:
    theme: [simple, custom.scss]
    transition: fade
    slide-number: true
    chalkboard: true
execute:
  echo: false
  message: false
  warning: false
  freeze: auto
---

# Welcome 👋

## Getting to Know Each Other 🗣

- Name and background
- Reasons for taking the course
- Experience with programming
- Experience with R and Shiny
- What you hope to learn

## Today's Schedule

- **9:00 - 10:20:** Introduction to R Shiny
- **10:20 - 10:40:** Break ☕
- **10:40 - 12:00:**  Shiny Basics
- **12:00 - 1:00:** Lunch 🍕🥤 
- **1:00 - 2:20:**  Scatter Plot App, Part 1
- **2:20 - 2:40:** Break ☕ 
- **2:40 - 4:00:** Scatter Plot App, Part 2

## Learning Objectives 

After this workshop, you will know:

- What Shiny is and how it works
- The elements of a Shiny app including a user interface and server
- How to create a simple Shiny app
- How to deploy a Shiny app

# Exploring Shiny 

## What is Shiny?

::: {.incremental}
- Shiny is an R package developed by [Posit](www.posit.co) that makes it easy to build interactive web apps straight from R
- No HTML, CSS, or JavaScript required
- Shiny apps can be hosted on the web or run locally
- Makes it easy to explore your data and share your analysis
:::

## What You Can Do with Shiny {.smaller}

::: {.incremental}
- **Data Exploration**: Utilize interactive widgets to filter and sort data dynamically
- **Basic Visualizations**: Create real-time, interactive graphs and charts from datasets
- **Advanced Analytics**: Integrate R's robust statistical and machine learning capabilities for in-depth analysis
- **Interactive Reports**: Build dynamic reports that update based on user input or live data
- **Production-Grade Dashboards**: Develop complex, multi-page dashboards with user authentication and data streaming
:::

## Flavors of Shiny {.smaller}

:::{.incremental}
- [R Shiny](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/index.html): The original framework, allowing R users to build interactive web applications directly within R
- [Shiny for Python](https://shiny.posit.co/py/): Extends Shiny's capabilities to Python, enabling Python users to create Shiny applications using Python code
- [Shiny Live](https://shiny.posit.co/py/docs/jupyter-widgets.html#shinylive): Enables you to run apps off the user's browser rather than having to deploy them to a server (only available in Python right now)
- [Shiny Express](https://shiny.posit.co/blog/posts/shiny-express/): A simplified version of Shiny for Python aimed at rapid development and deployment of applications with less coding and configuration required
- [Quarto Dashboards](https://quarto.org/docs/dashboards/): Not a Shiny app per se, but can connected to a Shiny server for increased interactivity
:::

## User Demos

- Have a look at the [Shiny gallery](https://shiny.posit.co/r/gallery/#user-showcase)
- Pick an app that you like?
- One thing you would like to learn from that app?
- One thing that you would improve
- Discuss with a neighbor

```{r}
#| label: timer1

library(countdown)
countdown(minutes = 5, 
          id = "timer1", 
          bottom = "10%",
          right = "10%",
          color_border = "#fff",
          color_text = "#fff",
          color_running_background = "#42affa",
          color_running_text = "black",
          color_finished_background = "#E5D19D",
          color_finished_text = "#00264A")
```

## Feature Demos

- Now let's look at [feature demos](https://shiny.posit.co/r/gallery/#feature-demos)
- What widgets, layouts, or features are you interested in?
- How would you use them in your own apps?

```{r}
#| label: timer2

countdown(minutes = 5, 
          id = "timer2", 
          bottom = "10%",
          right = "10%")
```

## Professional Apps {.smaller}

- Here is a selection of modern, professional Shiny Apps
  - [PESKAS](https://timor.peskas.org/) fisheries monitoring in Timor-Leste
  - [WaCSE](https://wsda.shinyapps.io/WaCSE/) for tracking reductions in GHG emissions as part of Washington State's [Sustainable Farms and Fields](https://www.scc.wa.gov/programs/sustainable-farms-fields) program
  - [JHU Lyme Disease Tracker](https://www.hopkinslymetracker.org/)
  - [movie-vue-r](https://friss.shinyapps.io/shiny-vue-r/#/) a Vue.js and Shiny app for exploring movie + COVID information
- These are mainly for inspiration, but try to find the code on GitHub and see how much you can understand

```{r}
#| label: timer3

countdown(minutes = 5, 
          id = "timer3", 
          bottom = "10%",
          right = "10%")
```

## Getting Started with Shiny

- Open RStudio
- Start a folder for the workshop 
- Install the `shiny` package (if not installed already)
- Create a new Shiny app
  - (File > New File > Shiny Web App)
- Run the Geyser App
- Try opening it in a browser

```{r}
#| label: timer4

countdown(minutes = 5, 
          id = "timer4", 
          bottom = "10%",
          right = "10%")
```

## Challenge

- Look at the `faithful` dataset in R (hint: `?faithful`)
- Create a Shiny app that displays a histogram of the `eruptions` column
- Change the labels accordingly
- What kind of distribution do you see?

```{r}
#| label: timer5

countdown(minutes = 10, 
          id = "timer5", 
          bottom = "10%",
          right = "10%")
```





