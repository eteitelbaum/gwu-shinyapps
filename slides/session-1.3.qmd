---
title: "WebApps 6502"
subtitle: "Session 1.3--Scatter Plot App, Part 1"
footer: "[WebApps Website](https://rshiny-is.cool)"
logo: images/webapps-logo.png
format:
  revealjs:
    theme: [simple, custom.scss]
    transition: fade
    slide-number: true
    chalkboard: true
execute:
  echo: false
  message: false
  warning: false
  freeze: auto
---

# Overview

## Idea for the App

<iframe src="https://emmanuelteitelbaum.shinyapps.io/vdem-scatter-plot/" width="780" height="500" data-external="1"></iframe>

## Plan

- **Step 1:** Wrangle data (this session)
- **Step 2:** Code up a scatter plot with two variables (session)
- **Step 3:** Code UI with a title panel, sidebar with two dropdowns, and a main panel with the scatter plot output
- **Step 4:** Code Server with reactive expressions to filter data and render the scatter plot
- **Step 5:** Call the Shiny App (don't forget!)

# Working with V-Dem Data

## The `vdemdata` Package

::: {.incremental}
- Access V-Dem API with `vdemdata` Package
- This is the only package for V-Dem
- Just downloads all the data
- So we have to use `dplyr` functions like `filter()` and `select()`
:::

## 

`vdem` just downloads all the data... 

```{r}
#| label: vdemdata1
#| echo: true

# Load packages
library(vdemdata) # to download V-Dem data
library(dplyr)

# Download the data
dem_data <- vdem 

# View the data
glimpse(dem_data)
```

## `filter()`, `select()`, `mutate()`

- `filter()` is used to select observations based on their values
- `select()` is used to select variables
- `mutate()` is used to create new variables or modifying existing ones

## `filter()`

Use `filter()` to select rows... 

```{r}
#| label: vdemdata2
#| echo: true
#| code-line-numbers: "2"

dem_data <- vdem |> # download the V-Dem dataset
  filter(year == 2000) 
  
glimpse(dem_data)  
```

## `=` versus `==`

- `=` is used to assign values to variables, just like `<-`
- `==` is used to test if two values are equal to each other
- So `filter(year == 1990)` will give you just the observations for 1990

## `>=` and `<=`

- `>=` is used to test if a value is greater than or equal to another value
- `<=` is used to test if a value is less than or equal to another value
- So `filter(year >= 1990)` will give you the observations for 1990 and later
- And `filter(year <= 1990)` will give you the observations for 1990 and earlier

## `select()`

Use `select()` to choose variables...

```{r}
#| label: vdemdata3
#| echo: true
#| code-line-numbers: "3-14"

dem_data <- vdem |> 
  filter(year == 2000) |>
  select(
    country = country_name, 
    polyarchy = v2x_polyarchy,
    clientelism = v2xnp_client,
    corruption = v2xnp_regcorr,
    womens_emp = v2x_gender,
    gdp_pc = e_gdppc,
    inf_mort = e_peinfmor,
    life_exp = e_pelifeex,
    education = e_peaveduc,
    region = e_regionpol_6C
  )
  
glimpse(dem_data)  
```

## `mutate()`

Use `mutate` with `case_match()` to recode region....

```{r}
#| label: vdemdata4
#| echo: true
#| code-line-numbers: "14-22"

dem_data <- vdem |>
  filter(year == 2000) |>
  select(
    country = country_name, 
    polyarchy = v2x_polyarchy,
    clientelism = v2xnp_client,
    corruption = v2xnp_regcorr,
    womens_emp = v2x_gender,
    gdp_pc = e_gdppc,
    inf_mort = e_peinfmor,
    life_exp = e_pelifeex,
    education = e_peaveduc,
    region = e_regionpol_6C 
  ) |>   mutate(
    region = case_match(region, 
                        1 ~ "Eastern Europe", 
                        2 ~ "Latin America",  
                        3 ~ "Middle East",   
                        4 ~ "Africa", 
                        5 ~ "The West", 
                        6 ~ "Asia")
  )
  
glimpse(dem_data)  
```

## Some Common Arithmetic Operators

- `+` addition
- `-` subtraction
- `*` multiplication
- `/` division
- `^` exponentiation (also `**`)

## Try it Yourself! 

- Start a new project folder and open a QMD file
- Have a look at the V-Dem [codebook](https://v-dem.net/documents/24/codebook_v13.pdf) 
- Use `filter()`, `select()`, and `mutate()` to create a new dataset
- Use `filter()` to select data for different years
- Use `select()` to choose different variables

```{r}
#| label: timer1
library(countdown)
countdown(minutes = 10, 
          id = "timer1", 
          bottom = "10%", 
          right = "10%",
          color_border = "#fff",
          color_text = "#fff",
          color_running_background = "#42affa",
          color_running_text = "black",
          color_finished_background = "#E5D19D",
          color_finished_text = "#00264A")
```

# Visualizing the Data

## The Grammar of Graphics

::: {.incremental}
- Data viz has a language with its own grammar
- Basic components include:
  - Data we are trying to visualize
  - Aesthetics (dimensions)
  - Geom (e.g. bar, line, scatter plot)
  - Color scales
  - Themes
  - Annotations
::: 

## Scatter Plot with the V-Dem Data

```{r}
#| label: scatterplot2

library(ggplot2)

ggplot(dem_data, aes(x = polyarchy, y = inf_mort)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(linewidth = 1) + 
  labs(
    x= "Democracy", 
    y = "Infant Mortality",
    title = "Democracy and Development", 
    caption = "Source: V-Dem Institute", 
    color = "Region"
    ) +
  scale_color_viridis_d(option = "inferno", end = .8) +
  theme_minimal()
```
  
##  

Load `ggplot2`... 

```{r}
#| label: scatterplot3
#| eval: false
#| echo: true
#| code-line-numbers: "0-1"

library(ggplot2)

ggplot(dem_data, aes(x = polyarchy, y = inf_mort)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(method = "lm", linewidth = 1) + 
  labs(
    x= "Democracy", 
    y = "Infant Mortality",
    title = "Democracy and Development", 
    caption = "Source: V-Dem Institute", 
    color = "Region"
    ) +
  scale_color_viridis_d(option = "inferno", end = .8) +
  theme_minimal()
```

## 

Call `ggplot`, specify data and dimensions in `aes()` function... 

```{r}
#| label: scatterplot4
#| eval: false
#| echo: true
#| code-line-numbers: "3"

library(ggplot2)

ggplot(dem_data, aes(x = polyarchy, y = inf_mort)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(method = "lm", linewidth = 1) + 
  labs(
    x= "Democracy", 
    y = "Infant Mortality",
    title = "Democracy and Development", 
    caption = "Source: V-Dem Institute", 
    color = "Region"
    ) +
  scale_color_viridis_d(option = "inferno", end = .8) +
  theme_minimal()
```

##

Use `geom_point()` to make the plot a scatter plot, and `(aes(color = region))` to color points by region...

```{r}
#| label: scatterplot5
#| eval: false
#| echo: true
#| code-line-numbers: "4"

library(ggplot2)

ggplot(dem_data, aes(x = polyarchy, y = inf_mort)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(method = "lm", linewidth = 1) + 
  labs(
    x= "Democracy", 
    y = "Infant Mortality",
    title = "Democracy and Development", 
    caption = "Source: V-Dem Institute", 
    color = "Region"
    ) +
  scale_color_viridis_d(option = "inferno", end = .8) +
  theme_minimal()
```

##

Add `geom_smooth()` to fit a loess curve to the data...

```{r}
#| label: scatterplot6
#| eval: false
#| echo: true
#| code-line-numbers: "5"

library(ggplot2)

ggplot(dem_data, aes(x = polyarchy, y = inf_mort)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(linewidth = 1) + 
  labs(
    x= "Democracy", 
    y = "Infant Mortality",
    title = "Democracy and Development", 
    caption = "Source: V-Dem Institute", 
    color = "Region"
    ) +
  scale_color_viridis_d(option = "inferno", end = .8) +
  theme_minimal()
```

##

Add labels with the `labs()` function...

```{r}
#| label: scatterplot7
#| eval: false
#| echo: true
#| code-line-numbers: "6-12"

library(ggplot2)

ggplot(dem_data, aes(x = polyarchy, y = inf_mort)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(linewidth = 1) + 
  labs(
    x= "Democracy", 
    y = "Infant Mortality",
    title = "Democracy and Development", 
    caption = "Source: V-Dem Institute", 
    color = "Region"
    ) +
  scale_color_viridis_d(option = "inferno", end = .8) +
  theme_minimal()
```

##

Add a `viridis` color scheme... 

```{r}
#| label: scatterplot8
#| eval: false
#| echo: true
#| code-line-numbers: "13"

library(ggplot2)

ggplot(dem_data, aes(x = polyarchy, y = inf_mort)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(linewidth = 1) + 
  labs(
    x= "Democracy", 
    y = "Infant Mortality",
    title = "Democracy and Development", 
    caption = "Source: V-Dem Institute", 
    color = "Region"
    ) +
  scale_color_viridis_d(option = "inferno", end = .8) +
  theme_minimal()
```

##

Add a theme... 

```{r}
#| label: scatterplot9
#| eval: false
#| echo: true
#| code-line-numbers: "14"

library(ggplot2)

ggplot(dem_data, aes(x = polyarchy, y = inf_mort)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(linewidth = 1) + 
  labs(
    x= "Democracy", 
    y = "Infant Mortality",
    title = "Democracy and Development", 
    caption = "Source: V-Dem Institute", 
    color = "Region"
    ) +
  scale_color_viridis_d(option = "inferno", end = .8) +
  theme_minimal()
```

## Try it Yourself

- Try making a scatter plot of the data you downloaded in the previous exercise
- Try putting different variables on the x- and y-axes
- Make sure to include appropriate labels, a title, and a caption
- Use a different `viridis` color scheme 
- Try a different theme if you like

```{r}
#| label: timer2

countdown(minutes = 10, 
          id = "timer2", 
          bottom = "10%", 
          right = "10%")
```

# Thinking About the App

## Scatter Plot App Design

- We want to create an app that allows users to create scatter plots with V-Dem data
- The app should allow users to select the variables they want to plot
- How will this affect our server logic? 

## 

What will change? 

```{r}
#| label: scatterplot10
#| eval: false
#| echo: true

library(ggplot2)

ggplot(dem_data, aes(x = polyarchy, y = inf_mort)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(linewidth = 1) + 
  labs(
    x= "Democracy", 
    y = "Infant Mortality",
    title = "Democracy and Development", 
    caption = "Source: V-Dem Institute", 
    color = "Region"
    ) +
  scale_color_viridis_d(option = "inferno", end = .8) +
  theme_minimal()
```

## 

What will change? 

```{r}
#| label: scatterplot11
#| eval: false
#| echo: true
#| code-line-numbers: "3,7-8"

library(ggplot2)

ggplot(dem_data, aes(x = polyarchy, y = inf_mort)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(linewidth = 1) + 
  labs(
    x= "Democracy", 
    y = "Infant Mortality",
    title = "Democracy and Development", 
    caption = "Source: V-Dem Institute", 
    color = "Region"
    ) +
  scale_color_viridis_d(option = "inferno", end = .8) +
  theme_minimal()
```
