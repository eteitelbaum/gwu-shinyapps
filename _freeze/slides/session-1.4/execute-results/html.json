{
  "hash": "28e94c2cef25bfdce0f3438cfd264c5b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"WebApps 6502\"\nsubtitle: \"Session 1.4--Scatter Plot App, Part 2\"\nfooter: \"[WebApps Website](https://rshiny-is.cool)\"\nlogo: images/webapps-logo.png\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    chalkboard: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n\n::: {.cell}\n\n:::\n\n\n# Overview\n\n## Idea for the App\n\n<iframe src=\"https://emmanuelteitelbaum.shinyapps.io/vdem-scatter-plot/\" width=\"780\" height=\"500\" data-external=\"1\"></iframe>\n\n## Plan\n\n- **Step 1:** Wrangle Data (done) \n- **Step 2:** Code up a scatter plot with two variables (done)\n- **Step 3:** Code UI with a title panel, sidebar with two dropdowns, and a main panel with the scatter plot output\n- **Step 4:** Code Server with reactive expressions to filter data and render the scatter plot\n- **Step 5:** Call the Shiny App (don't forget!)\n\n# The User Interface (`ui`)\n\n## \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}