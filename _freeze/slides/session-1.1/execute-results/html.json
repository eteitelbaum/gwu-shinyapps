{
  "hash": "46cecf3be9b75fefbac76c06532a53d8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"WebApps 6502\"\nsubtitle: \"Session 1.1--Introduction to R Shiny\"\nfooter: \"[WebApps Website](https://rshiny-is.cool)\"\nlogo: images/webapps-logo.png\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    chalkboard: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n\n\n# Welcome üëã\n\n## Getting to Know Each Other üó£\n\n- Name and background\n- Reasons for taking the course\n- Experience with programming\n- Experience with R and Shiny\n- What you hope to learn\n\n## Today's Schedule\n\n- **9:00 - 10:20:** Introduction to R Shiny\n- **10:20 - 10:40:** Break ‚òï\n- **10:40 - 12:00:**  Shiny Basics\n- **12:00 - 1:00:** Lunch üçïü•§ \n- **1:00 - 2:20:**  Scatter Plot App, Part 1\n- **2:20 - 2:40:** Break ‚òï \n- **2:40 - 4:00:** Scatter Plot App, Part 2\n\n## Learning Objectives \n\nAfter this workshop, you will know:\n\n- What Shiny is and how it works\n- The elements of a Shiny app including a user interface and server\n- How to create a simple Shiny app\n- How to deploy a Shiny app\n\n# Exploring Shiny \n\n## What is Shiny?\n\n::: {.incremental}\n- Shiny is an R package developed by [Posit](www.posit.co) that makes it easy to build interactive web apps straight from R\n- No HTML, CSS, or JavaScript required\n- Shiny apps can be hosted on the web or run locally\n- Makes it easy to explore your data and share your analysis\n:::\n\n## What You Can Do with Shiny {.smaller}\n\n::: {.incremental}\n- **Data Exploration**: Utilize interactive widgets to filter and sort data dynamically\n- **Basic Visualizations**: Create real-time, interactive graphs and charts from datasets\n- **Advanced Analytics**: Integrate R's robust statistical and machine learning capabilities for in-depth analysis\n- **Interactive Reports**: Build dynamic reports that update based on user input or live data\n- **Production-Grade Dashboards**: Develop complex, multi-page dashboards with user authentication and data streaming\n:::\n\n## Flavors of Shiny {.smaller}\n\n:::{.incremental}\n- [R Shiny](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/index.html): The original framework, allowing R users to build interactive web applications directly within R\n- [Shiny for Python](https://shiny.posit.co/py/): Extends Shiny's capabilities to Python, enabling Python users to create Shiny applications using Python code\n- [Shiny Live](https://shiny.posit.co/py/docs/jupyter-widgets.html#shinylive): Enables you to run apps off the user's browser rather than having to deploy them to a server (only available in Python right now)\n- [Shiny Express](https://shiny.posit.co/blog/posts/shiny-express/): A simplified version of Shiny for Python aimed at rapid development and deployment of applications with less coding and configuration required\n- [Quarto Dashboards](https://quarto.org/docs/dashboards/): Not a Shiny app per se, but can connected to a Shiny server for increased interactivity\n:::\n\n## User Demos\n\n- Have a look at the [Shiny gallery](https://shiny.posit.co/r/gallery/#user-showcase)\n- Pick an app that you like?\n- One thing you would like to learn from that app?\n- One thing that you would improve\n- Discuss with a neighbor\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer1\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Feature Demos\n\n- Now let's look at [feature demos](https://shiny.posit.co/r/gallery/#feature-demos)\n- What widgets, layouts, or features are you interested in?\n- How would you use them in your own apps?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer2\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Professional Apps {.smaller}\n\n- Here is a selection of modern, professional Shiny Apps\n  - [PESKAS](https://timor.peskas.org/) fisheries monitoring in Timor-Leste\n  - [WaCSE](https://wsda.shinyapps.io/WaCSE/) for tracking reductions in GHG emissions as part of Washington State's [Sustainable Farms and Fields](https://www.scc.wa.gov/programs/sustainable-farms-fields) program\n  - [JHU Lyme Disease Tracker](https://www.hopkinslymetracker.org/)\n  - [movie-vue-r](https://friss.shinyapps.io/shiny-vue-r/#/) a Vue.js and Shiny app for exploring movie + COVID information\n- These are mainly for inspiration, but try to find the code on GitHub and see how much you can understand\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer3\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Getting Started with Shiny\n\n- Open RStudio\n- Start a folder for the workshop \n- Install the `shiny` package (if not installed already)\n- Create a new Shiny app\n  - (File > New File > Shiny Web App)\n- Run the Geyser App\n- Try opening it in a browser\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer4\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Challenge\n\n- Look at the `faithful` dataset in R (hint: `?faithful`)\n- Create a Shiny app that displays a histogram of the `eruptions` column\n- Change the labels accordingly\n- What kind of distribution do you see?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer5\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [
      "session-1.1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}